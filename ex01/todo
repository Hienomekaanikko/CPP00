PHONEBOOK:

*No dynamic allocation

- Implement two classes
	- PhoneBook
		- Has an array of contacts
		- Can store max 8 contacts. Any extra just replaces the oldest with the new one.
	- Contact
		- Is the phonebook contact

- Phonebook must be instantiated as an insance of the PhoneBook class. Same for the Contact class.
	- Design the classes as you like, but keep in mind that anything that will always be used inside a class is private and outside of a class is public

Functionality:
	- On startup the phonebook is empty
	- User is prompted to enter: ADD, SEARCH, EXIT
		- ADD: Save a new contact
			- Information to be taken (NO EMPTY FIELDS ALLOWED):
				- first name
				- last name
				- nickname
				- phone numer
				- darkest secret
		- SEARCH: Display a specific contact
			- Display the saved contacts as a list of 4 columns (10 char wide separated by "|")
				index   | first name | last name | nickname
					- must be right aligned
					- if the text is longer than the column, it must be truncated and last character must be replaced by "."
			- Prompt the user again to enter index to see
				- if out of range, define relevant behavior
				- otherwise display contact information line by line
		- EXIT
			- the program quits and the contacts are lost forever
		- ANY OTHER INPUT IS DISCARDED
		- Once a command has been correctly executed, the program waits for anther one until EXIT is entered

---------------------------------------

main:

- while loop waiting for input
-


